apply plugin: 'groovy'
apply plugin: 'war'
apply plugin: 'org.akhikhl.gretty'
apply plugin: 'com.google.cloud.tools.appengine'

buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath 'com.google.cloud.tools:appengine-gradle-plugin:+'
        classpath 'org.akhikhl.gretty:gretty:+'
    }
}

repositories {
    jcenter()
}

dependencies {
    providedCompile 'javax.servlet:javax.servlet-api:3.1.0'
    providedCompile 'com.google.appengine:appengine:+'
    compile localGroovy()
    compile 'io.github.http-builder-ng:http-builder-ng-core:1.0.0'
    compile 'log4j:log4j:1.2.17'
    // Using sfl4j allows us to replace different loggers later, if desired
    compile group: 'org.slf4j', name:'slf4j-api', version: '1.7.2'

    // sfl4j is just a facade for loggers. To actually get logging to work, you need to
    // tie it in with some actual implementation, e.g., logback
    compile group: 'ch.qos.logback', name:'logback-classic', version: '1.0.9'
    compile group: 'ch.qos.logback', name:'logback-core', version: '1.0.9'
}

gretty {
    httpPort = 8080
    contextPath = '/'
    servletContainer = 'jetty9'  // What App Engine Flexible uses
    logbackConfigFile = 'src/test/resources/gretty-logback.xml'
}

appengine {

    deploy {   // deploy configuration
        stopPreviousVersion = true  // default - stop the current version
        promote = true              // default - & make this the current version
    }
}

gretty {
    httpPort = 8080
    contextPath = '/'
    servletContainer = 'jetty9'  // What App Engine Flexible uses
}

appengine {

    deploy {   // deploy configuration
        stopPreviousVersion = true  // default - stop the current version
        promote = true              // default - & make this the current version
    }

}


sourceCompatibility = 1.8
targetCompatibility = 1.8
